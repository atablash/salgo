dist: trusty
sudo: false
os: linux
language: cpp


git:
  depth: 1


addons:
  apt:
    sources:
      # FOR G++-7 BUILDS:
      #- ubuntu-toolchain-r-test

      # FOR libstdc++ BUILDS:
      #- ubuntu-toolchain-r-test # default libstdc++ in Ubuntu 14.04 is too old

    packages:
      # FOR ALL BUILDS:
      - libgoogle-glog-dev
      - libgflags-dev
      #- libgtest-dev # we'll compile our own, because it doesn't come with binaries anyway
      - libeigen3-dev
      #- autoconf # for compiling glog
      #- libtool # for compiling glog

      # FOR G++-7 BUILDS:
      #- g++-7

env:
  global:
    - DESTDIR="$(pwd)/INSTALL_ROOT"
    - CMAKE_PREFIX_PATH="$DESTDIR/usr/local"

    - USE_LIBCXX=OFF

    # for libc++
    - CMAKE_INCLUDE_PATH="$CMAKE_PREFIX_PATH/include/c++/v1"
    - CMAKE_LIBRARY_PATH="$CMAKE_PREFIX_PATH/lib"

    # for libc++
    - CXX_FLAGS="-I$CMAKE_INCLUDE_PATH -nostdinc++"
    - LD_FLAGS="-L$CMAKE_LIBRARY_PATH"

    # for running programs using libc++
    - LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$CMAKE_LIBRARY_PATH"






matrix:
  include:


    # g++-7  +  libstdc++
    - compiler: g++-7
      env:
        - COMPILER_OVERRIDE="export CC=gcc-7 && export CXX=g++-7"

      addons:
        apt:
          sources:
            # FOR G++-7 BUILDS:
            - ubuntu-toolchain-r-test
          packages:
            # FOR ALL BUILDS:
            - libgoogle-glog-dev
            - libgflags-dev
            - libeigen3-dev

            # FOR G++-7 BUILDS:
            - g++-7




    # clang++-5.0  +  libstdc++
    - compiler: clang++
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test # default libstdc++ in Ubuntu 14.04 is too old

          packages:
            # FOR ALL BUILDS:
            - libgoogle-glog-dev
            - libgflags-dev
            - libeigen3-dev

            - libstdc++-7-dev # default libstdc++ in Ubuntu 14.04 is too old




    # clang++-5.0  +  libc++
    - compiler: clang++
      env:
        - USE_LIBCXX=ON




    # g++-7  +  libc++
    - compiler: g++-7
      env:
        - COMPILER_OVERRIDE="export CC=gcc-7 && export CXX=g++-7"
        - USE_LIBCXX=ON

      addons:
        apt:
          sources:
            # FOR G++-7 BUILDS:
            - ubuntu-toolchain-r-test
          packages:
            # FOR ALL BUILDS:
            - libgoogle-glog-dev
            - libgflags-dev
            - libeigen3-dev

            # FOR G++-7 BUILDS:
            - g++-7






before_install:
  - eval $COMPILER_OVERRIDE


install:
  - if [[ $USE_LIBCXX = ON ]]; then travis/install-libcxx.sh; fi

  # print libstdc++ and libc++ versions
  - /sbin/ldconfig -p | grep -E "libc\+\+|libstdc\+\+"

  # google benchmark
  - (git clone https://github.com/google/benchmark.git inst-benchmark --depth 1    && cd inst-benchmark    && cmake . -DBENCHMARK_ENABLE_TESTING=OFF -DCMAKE_BUILD_TYPE=RELEASE -DBENCHMARK_USE_LIBCXX=$USE_LIBCXX -DCMAKE_CXX_FLAGS=$CXX_FLAGS -DCMAKE_EXE_LINKER_FLAGS=$LD_FLAGS    && make -j2    && make install)

  # gtest (the version from ubuntu repos is not compiled, only source)
  - (git clone https://github.com/google/googletest.git inst-gtest --depth 1    && cd inst-gtest    && cmake . -DCMAKE_BUILD_TYPE=Release    && make -j2    && make install)

script:
  # build
  - cmake -D SALGO_BUILD_TESTS=ON -D SALGO_BUILD_BENCHMARKS=ON -D SALGO_USE_LIBCXX=$USE_LIBCXX -DCMAKE_CXX_FLAGS=$CXX_FLAGS -DCMAKE_EXE_LINKER_FLAGS=$LD_FLAGS .
  - make VERBOSE=1

  # run tests
  - test/all-tests

  # run benchmarks
  - benchmark/hash-table



notifications:
  email: false
