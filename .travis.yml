dist: trusty
sudo: false
os: linux
language: cpp


git:
  depth: 1


addons:
  apt:
    sources:
      # FOR G++-7 BUILDS:
      #- ubuntu-toolchain-r-test

      # FOR libstdc++ BUILDS:
      #- ubuntu-toolchain-r-test # default libstdc++ in Ubuntu 14.04 is too old

    packages:
      # FOR ALL BUILDS:
      - libgoogle-glog-dev
      - libgflags-dev
      #- libgtest-dev # we'll compile our own, because it doesn't come with binaries anyway
      - libeigen3-dev
      #- autoconf # for compiling glog
      #- libtool # for compiling glog

      # FOR G++-7 BUILDS:
      #- g++-7

env:
  global:
    - DESTDIR="$(pwd)/INSTALL_ROOT"
    - CMAKE_PREFIX_PATH="$DESTDIR/usr/local"

    # for libc++
    - CMAKE_INCLUDE_PATH="$CMAKE_PREFIX_PATH/include/c++/v1"
    - CMAKE_LIBRARY_PATH="$CMAKE_PREFIX_PATH/lib"

    # for libc++
    - CXX_FLAGS="-I$CMAKE_INCLUDE_PATH"
    - LD_FLAGS="-L$CMAKE_LIBRARY_PATH"

    # for running programs using libc++
    - LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$CMAKE_LIBRARY_PATH"






matrix:
  include:


    # # g++-7  +  libstdc++
    # - compiler: g++-7
    #   env:
    #     - COMPILER_OVERRIDE="export CC=gcc-7 && export CXX=g++-7"

    #   addons:
    #     apt:
    #       sources:
    #         # FOR G++-7 BUILDS:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #         # FOR ALL BUILDS:
    #         - libgoogle-glog-dev
    #         - libgflags-dev
    #         - libeigen3-dev

    #         # FOR G++-7 BUILDS:
    #         - g++-7




    # # clang++-5.0  +  libstdc++
    # - compiler: clang++
    #   #env:
    #     #- COMPILER_OVERRIDE="export CC=clang-5.0 && export CXX=clang++-5.0"
    #     #- USE_LIBCXX=ON
    #     #- CMAKE_ARGS="-DCMAKE_CXX_FLAGS=-stdlib=libc++"
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test # default libstdc++ in Ubuntu 14.04 is too old

    #       packages:
    #         # FOR ALL BUILDS:
    #         - libgoogle-glog-dev
    #         - libgflags-dev
    #         - libeigen3-dev

    #         - libstdc++-7-dev # default libstdc++ in Ubuntu 14.04 is too old




    # # clang++-5.0  +  libc++
    # - compiler: clang++
    #   env:
    #     - USE_LIBCXX=ON
    #     - CMAKE_ARGS="-DCMAKE_CXX_FLAGS=-stdlib=libc++"




    # g++ 7  +  libc++
    - compiler: g++-7
      env:
        - COMPILER_OVERRIDE="export CC=gcc-7 && export CXX=g++-7"
        - USE_LIBCXX=ON

      addons:
        apt:
          sources:
            # FOR G++-7 BUILDS:
            - ubuntu-toolchain-r-test
          packages:
            # FOR ALL BUILDS:
            - libgoogle-glog-dev
            - libgflags-dev
            - libeigen3-dev

            # FOR G++-7 BUILDS:
            - g++-7


    # clang++ 5.0  +  libstdc++
    # - os: linux
    #   addons:
    #     apt:
    #       sources:
    #         - llvm-toolchain-trusty-5.0
    #         - ubuntu-toolchain-r-test # libstdc++-7-dev
    #       packages:
    #         - clang-5.0
    #         - libstdc++-7-dev
    #         - autoconf # for compiling glog
    #         - libtool # for compiling glog
    #         # dependencies
    #         #- libgoogle-glog-dev
    #         #- libgtest-dev
    #         - libgflags-dev
    #         - libeigen3-dev
    #   env:
    #     - CC=clang-5.0
    #     - CXX=clang++-5.0
    #     - USE_LIBCXX=OFF
    #     - CMAKE_ARGS=
    #     - CMAKE_PREFIX_PATH=`pwd`/INSTALL_ROOT


    #- os: linux
      



before_install:
  - eval $COMPILER_OVERRIDE


#install:
script:
  - if [[ $USE_LIBCXX = ON ]]; then travis/install-libcxx.sh; fi

  #- travis/install-gtest.sh

  # google benchmark
  - (git clone https://github.com/google/benchmark.git inst-benchmark --depth 1    && cd inst-benchmark    && cmake . -DBENCHMARK_ENABLE_GTEST_TESTS=OFF -DCMAKE_BUILD_TYPE=RELEASE    $(if [[ $USE_LIBCXX = ON ]]; then echo -DBENCHMARK_USE_LIBCXX=ON; fi)  -DCMAKE_CXX_FLAGS=$CXX_FLAGS -DCMAKE_EXE_LINKER_FLAGS=$LD_FLAGS  --debug-trycompile  && make -j2    && make install)

  - (cd inst-benchmark/CMakeFiles/CMakeTmp && make VERBOSE=1)

  # print libstdc++ and libc++ versions
  #- /sbin/ldconfig -p | grep -E "libc\+\+|libstdc\+\+"


  # build
  #- cmake -D SALGO_BUILD_TESTS=ON -D SALGO_BUILD_BENCHMARKS=ON -D SALGO_USE_LIBCXX=$USE_LIBCXX .
  #- make VERBOSE=1

  # run tests
  #- ctest --verbose
  #- test/all-tests

  # run benchmarks
  #- benchmark/hash-table



notifications:
  email: false
