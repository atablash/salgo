dist: trusty
sudo: false
os: linux
language: cpp


git:
  depth: 1


addons:
  apt:
    sources:
      # FOR G++-7 BUILDS:
      #- ubuntu-toolchain-r-test

      # FOR libstdc++ BUILDS:
      #- ubuntu-toolchain-r-test # default libstdc++ in Ubuntu 14.04 is too old

    packages:
      # FOR ALL BUILDS:
      - libgoogle-glog-dev
      - libgflags-dev
      #- libgtest-dev # we'll compile our own, because it doesn't come with binaries anyway
      - libeigen3-dev
      #- autoconf # for compiling glog
      #- libtool # for compiling glog

      # FOR G++-7 BUILDS:
      #- g++-7

env:
  global:
    - CMAKE_PREFIX_PATH="$(pwd)/INSTALL_ROOT/usr/local"
    - USE_LIBCXX=OFF


matrix:
  include:

    # g++-7  +  libstdc++
    - compiler: g++-7
      env:
        - COMPILER_OVERRIDE="export CC=gcc-7 && export CXX=g++-7"

      addons:
        apt:
          sources:
            # FOR G++-7 BUILDS:
            - ubuntu-toolchain-r-test
          packages:
            # FOR ALL BUILDS:
            - libgoogle-glog-dev
            - libgflags-dev
            - libeigen3-dev

            # FOR G++-7 BUILDS:
            - g++-7


    # clang++-5.0  +  libstdc++
    - compiler: clang++
      #env:
        #- COMPILER_OVERRIDE="export CC=clang-5.0 && export CXX=clang++-5.0"
        #- USE_LIBCXX=ON
        #- CMAKE_ARGS="-DCMAKE_CXX_FLAGS=-stdlib=libc++"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test # default libstdc++ in Ubuntu 14.04 is too old

          packages:
            # FOR ALL BUILDS:
            - libgoogle-glog-dev
            - libgflags-dev
            - libeigen3-dev

            - libstdc++-7-dev # default libstdc++ in Ubuntu 14.04 is too old


    # clang++-5.0  +  libc++
    - compiler: clang++
      env:
        - USE_LIBCXX=ON
        - CMAKE_ARGS="-DCMAKE_CXX_FLAGS=-stdlib=libc++"





    # g++ 7  +  libc++
    # - os: linux
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #      packages:
    #         - g++-7
    #         - libc++-dev
    #         - autoconf # for compiling glog
    #         - libtool # for compiling glog
    #         # dependencies
    #         #- libgoogle-glog-dev
    #         #- libgtest-dev
    #         - libgflags-dev
    #         - libeigen3-dev
    #   env:
    #     - CC=gcc-7
    #     - CXX=g++-7
    #     - USE_LIBCXX=ON
    #     - CMAKE_ARGS="-DCMAKE_CXX_FLAGS=-stdlib=libc++"    # TODO


    # clang++ 5.0  +  libstdc++
    # - os: linux
    #   addons:
    #     apt:
    #       sources:
    #         - llvm-toolchain-trusty-5.0
    #         - ubuntu-toolchain-r-test # libstdc++-7-dev
    #       packages:
    #         - clang-5.0
    #         - libstdc++-7-dev
    #         - autoconf # for compiling glog
    #         - libtool # for compiling glog
    #         # dependencies
    #         #- libgoogle-glog-dev
    #         #- libgtest-dev
    #         - libgflags-dev
    #         - libeigen3-dev
    #   env:
    #     - CC=clang-5.0
    #     - CXX=clang++-5.0
    #     - USE_LIBCXX=OFF
    #     - CMAKE_ARGS=
    #     - CMAKE_PREFIX_PATH=`pwd`/INSTALL_ROOT


    #- os: linux
      



before_install:
  - eval $COMPILER_OVERRIDE


install:
  - travis/install-gtest.sh             "$CMAKE_ARGS"
  # - travis/install-glog.sh              "${CMAKE_ARGS}"
  # - travis/install-gtest.sh             "${CMAKE_ARGS}"
  - travis/install-google-benchmark.sh  "$CMAKE_ARGS"
  # - travis/install-eigen.sh             "${CMAKE_ARGS}"


script:
  - echo "CC:" ${CC}
  - echo "CXX:" ${CXX}
  - echo "USE_LIBCXX:" ${USE_LIBCXX}
  - echo "CMAKE_ARGS:" ${CMAKE_ARGS}
  - echo "CMAKE_PREFIX_PATH:" ${CMAKE_PREFIX_PATH}
  # build
  - cmake -D SALGO_BUILD_TESTS=ON -D SALGO_BUILD_BENCHMARKS=ON -D SALGO_USE_LIBCXX=$USE_LIBCXX .
  - make VERBOSE=1
  - /sbin/ldconfig -p | grep -E "libc\+\+|libstdc\+\+" # print libstdc++ and libc++ versions
  - ctest --verbose
  - benchmark/hash-table

notifications:
  email: false
